<?xml version="1.0" encoding="utf-8" ?>
<Application xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit" 
             x:Class="NetHome.App">
    <Application.Resources>
        <Color x:Key="Primary">#26272c</Color>
        <Color x:Key="Secondary">#313139</Color>
        <Color x:Key="Accent">#119664</Color>
        <Color x:Key="AccentSecondary">#1fd38f</Color>
        <Color x:Key="Warning">#a63733</Color>
        <Color x:Key="Neutral">Gray</Color>
        <Color x:Key="DisabledTextColor">Gray</Color>
        <Color x:Key="TabBarBackground">#313139</Color>
        <Color x:Key="White">White</Color>
        <Color x:Key="DarkGray">DarkGray</Color>
        <Style TargetType="Entry">
            <Setter Property="TextColor" Value="Black"></Setter>
            <Setter Property="BackgroundColor" Value="White"></Setter>
            <Setter Property="PlaceholderColor" Value="Gray"></Setter>
            <Setter Property="Margin" Value="5,0,5,0"></Setter>
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal">
                            <VisualState.Setters>
                                <Setter Property="TextColor" Value="Black" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <VisualState.Setters>
                                <Setter Property="TextColor" Value="{StaticResource DisabledTextColor}" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>
        <Style TargetType="Picker">
            <Setter Property="TextColor" Value="Black"></Setter>
            <Setter Property="BackgroundColor" Value="White"></Setter>
            <Setter Property="Margin" Value="5,0,5,0"></Setter>
        </Style>
        <Style TargetType="Button">
            <Setter Property="TextColor" Value="White"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="CornerRadius" Value="10"></Setter>
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{StaticResource Accent}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="#2f5949" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>
        <xct:InvertedBoolConverter x:Key="InvertedBoolConverter" />
        <xct:BoolToObjectConverter x:Key="SwitchColorConverter" TrueObject="{StaticResource Accent}" FalseObject="{StaticResource Neutral}" />
        
        <ControlTemplate x:Key="PowerButtonWithIndicatorTemplate">
            <Frame Padding="0" Margin="0,0,10,0" BackgroundColor="Transparent" VerticalOptions="Center" HorizontalOptions="Center" WidthRequest="80" HeightRequest="80">
                <Frame.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding Source={RelativeSource TemplatedParent},Path=ClickCommand}" />
                </Frame.GestureRecognizers>
                <Grid>
                    <Frame IsVisible="{Binding Source={RelativeSource TemplatedParent},Path=IsWaiting, Converter={StaticResource InvertedBoolConverter}}" Padding="0" Margin="15" BackgroundColor="Transparent" BorderColor="{StaticResource Neutral}" CornerRadius="100">
                        <Image Source="power.png" Margin="10" xct:IconTintColorEffect.TintColor="{Binding Source={RelativeSource TemplatedParent},Path=CurrentState, Converter={StaticResource SwitchColorConverter}}" />
                    </Frame>
                    <ActivityIndicator IsRunning="{Binding Source={RelativeSource TemplatedParent},Path=IsWaiting}" Opacity="100"
                                   HorizontalOptions="Center" VerticalOptions="Center" Color="{StaticResource Neutral}" Margin="20"/>
                </Grid>
            </Frame>
        </ControlTemplate>
    </Application.Resources>
</Application>
